// Generated by Dagger (https://dagger.dev).
package abdulmanov.eduard.timetable.presentation.events.onetimeclass;

import com.github.terrakok.cicerone.Router;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OneTimeClassViewModel_Factory implements Factory<OneTimeClassViewModel> {
  private final Provider<Router> routerProvider;

  public OneTimeClassViewModel_Factory(Provider<Router> routerProvider) {
    this.routerProvider = routerProvider;
  }

  @Override
  public OneTimeClassViewModel get() {
    return newInstance(routerProvider.get());
  }

  public static OneTimeClassViewModel_Factory create(Provider<Router> routerProvider) {
    return new OneTimeClassViewModel_Factory(routerProvider);
  }

  public static OneTimeClassViewModel newInstance(Router router) {
    return new OneTimeClassViewModel(router);
  }
}
